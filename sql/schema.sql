DROP TABLE CAN_TAKE CASCADE CONSTRAINTS;
DROP TABLE MUST_TAKE CASCADE CONSTRAINTS;
DROP TABLE PREREQS CASCADE CONSTRAINTS;
DROP TABLE ELECTIVES CASCADE CONSTRAINTS;
DROP TABLE MANDATORY CASCADE CONSTRAINTS;
DROP TABLE TOOK CASCADE CONSTRAINTS;
DROP TABLE TAKES CASCADE CONSTRAINTS;
DROP TABLE STUDIES CASCADE CONSTRAINTS;
DROP TABLE MAJORS CASCADE CONSTRAINTS;
DROP TABLE OFFERINGS CASCADE CONSTRAINTS;
DROP TABLE COURSES CASCADE CONSTRAINTS;
DROP TABLE STUDENTS CASCADE CONSTRAINTS;

CREATE TABLE STUDENTS (
	perm VARCHAR2(7),
	name VARCHAR2(20),
	address VARCHAR2(50),
	dept VARCHAR2(20),
	pin VARCHAR2(64) DEFAULT '88d4266fd4e6338d13b845fcf8a3c016e6f0c1f16a4ae06aefc2cb6a87e4b5d9',
    PRIMARY KEY (perm));

CREATE TABLE COURSES (
    course_no VARCHAR2(10),
    title VARCHAR2(20),
    PRIMARY KEY (course_no));

CREATE TABLE OFFERINGS (
    course_no VARCHAR2(10),
    enroll_code INTEGER,
    year INTEGER,
    quarter VARCHAR2(10),
    location VARCHAR2(50),
    time VARCHAR2(20),
    capacity INTEGER,
    professor VARCHAR2(20),
    PRIMARY KEY (enroll_code),
    FOREIGN KEY (course_no) REFERENCES COURSES);

CREATE TABLE MAJORS (
    major_id INTEGER,
    name VARCHAR2(20),
    dept VARCHAR2(50),
    num_electives INTEGER,
    PRIMARY KEY (major_id));

CREATE TABLE STUDIES (
    perm VARCHAR2(7),
    major_id INTEGER,
    num_electives INTEGER,
    PRIMARY KEY (perm, major_id),
    FOREIGN KEY (perm) REFERENCES STUDENTS,
    FOREIGN KEY (major_id) REFERENCES MAJORS);

CREATE TABLE TAKES (
    perm VARCHAR2(7),
    enroll_code INTEGER,
    PRIMARY KEY (perm, enroll_code),
    FOREIGN KEY (perm) REFERENCES STUDENTS,
    FOREIGN KEY (enroll_code) REFERENCES OFFERINGS);

CREATE TABLE TOOK (
    perm VARCHAR2(7),
    enroll_code INTEGER,
    grade VARCHAR2(2),
    PRIMARY KEY (perm, enroll_code),
    FOREIGN KEY (perm) REFERENCES STUDENTS,
    FOREIGN KEY (enroll_code) REFERENCES OFFERINGS,
    CHECK (grade IN ('A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'F+', 'F', 'F-')));

CREATE TABLE MANDATORY (
    course_no VARCHAR2(10),
    PRIMARY KEY (course_no),
    FOREIGN KEY (course_no) REFERENCES COURSES);

CREATE TABLE ELECTIVES (
    course_no VARCHAR2(10),
    PRIMARY KEY (course_no),
    FOREIGN KEY (course_no) REFERENCES COURSES);

CREATE TABLE PREREQS (
    course VARCHAR2(10),
    prereq_course VARCHAR2(10),
    PRIMARY KEY (course, prereq_course),
    FOREIGN KEY (course) REFERENCES COURSES,
    FOREIGN KEY (prereq_course) REFERENCES COURSES);

CREATE TABLE MUST_TAKE (
    major_id INTEGER,
    course_no VARCHAR2(10),
    PRIMARY KEY (major_id, course_no),
    FOREIGN KEY (major_id) REFERENCES MAJORS,
    FOREIGN KEY (course_no) REFERENCES MANDATORY);

CREATE TABLE CAN_TAKE (
    major_id INTEGER,
    course_no VARCHAR2(10),
    PRIMARY KEY (major_id, course_no),
    FOREIGN KEY (major_id) REFERENCES MAJORS,
    FOREIGN KEY (course_no) REFERENCES ELECTIVES);





